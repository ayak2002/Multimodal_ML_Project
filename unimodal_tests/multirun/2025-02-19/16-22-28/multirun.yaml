hydra:
  run:
    dir: outputs/unimodal_test
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
    params: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.runtime.output_dir}/${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  mode: MULTIRUN
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra:
    - hydra.run.dir=outputs/unimodal_test
    - hydra.mode=MULTIRUN
    task:
    - ++train.adaptive_interface_lr=0.001
    - ++train.num_epochs=1
    - ++train.batch_size=4
  job:
    name: main
    chdir: null
    override_dirname: ++train.adaptive_interface_lr=0.001,++train.batch_size=4,++train.num_epochs=1
    id: ???
    num: ???
    config_name: vit_unimodal
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.3.2
    version_base: '1.3'
    cwd: /projectnb/cs598/projects/Modalities_Robustness/unimodal_tests
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /projectnb/cs598/projects/Modalities_Robustness/unimodal_tests/configs
      schema: file
      provider: main
    - path: ''
      schema: structured
      provider: schema
    output_dir: ???
    choices:
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
tag: unimodal_test
dataset:
  name: morphem70k
  root_dir: /projectnb/cs598/projects/Modalities_Robustness/channel_adaptive_models/chammi_dataset/CHAMMI
  img_size: 224
  in_channel_names:
  - Nucleus
  - Membrane
data_chunk:
  chunks:
  - HPA:
    - nucleus
  - CP:
    - membrane
  - Allen:
    - dna
train:
  batch_size: 4
  num_epochs: 1
  adaptive_interface_epochs: 0
  resume_train: false
  save_model: last
  debug: true
  seed: 42
  use_amp: false
  swa: false
  swad: false
  swa_start: 0
  swa_lr: 0.05
  miro: false
  miro_ld: 0.0
  miro_lr_mult: 1.0
  clip_grad_norm: null
  extra_loss_lambda: 0.0
  ssl: false
  adaptive_interface_lr: 0.001
  checkpoints: outputs/checkpoints
eval:
  batch_size: 32
  every_n_epochs: 1
  eval_subset_channels: false
  meta_csv_file: /projectnb/cs598/projects/Modalities_Robustness/channel_adaptive_models/chammi_dataset/morphem70k_v2.csv
hardware:
  device: cuda
  multi_gpus: null
  num_workers: 4
model:
  name: ViT
  num_classes: 10
  img_size: 224
  init_first_layer: true
  learnable_temp: false
  pooling_channel_type: null
  pretrained: false
  new_channel_inits:
  - zero
  - random
optimizer:
  name: Adam
  params:
    lr: 0.001
    weight_decay: 0.0001
scheduler:
  name: CosineAnnealingLR
  params:
    T_max: 5
    eta_min: 1.0e-05
logging:
  scc_jobid: null
  wandb:
    project_name: unimodal_test
    use_wandb: false
